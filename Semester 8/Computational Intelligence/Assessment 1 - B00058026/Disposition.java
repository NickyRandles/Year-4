Engine engine = new Engine();
engine.setName("");

InputVariable inputVariable1 = new InputVariable();
inputVariable1.setEnabled(true);
inputVariable1.setName("age");
inputVariable1.setRange(20.000, 60.000);
inputVariable1.addTerm(new Trapezoid("young", 20.000, 20.000, 30.000, 40.000));
inputVariable1.addTerm(new Triangle("middle", 30.000, 40.000, 50.000));
inputVariable1.addTerm(new Trapezoid("old", 40.000, 50.000, 60.000, 60.000));
engine.addInputVariable(inputVariable1);

InputVariable inputVariable2 = new InputVariable();
inputVariable2.setEnabled(true);
inputVariable2.setName("health");
inputVariable2.setRange(0.000, 10.000);
inputVariable2.addTerm(new Trapezoid("bad", 0.000, 0.000, 2.500, 5.000));
inputVariable2.addTerm(new Triangle("good", 2.500, 5.000, 7.500));
inputVariable2.addTerm(new Trapezoid("great", 5.000, 7.500, 10.000, 10.000));
engine.addInputVariable(inputVariable2);

InputVariable inputVariable3 = new InputVariable();
inputVariable3.setEnabled(true);
inputVariable3.setName("income");
inputVariable3.setRange(0.000, 60.000);
inputVariable3.addTerm(new Trapezoid("lower", 0.000, 0.000, 15.000, 30.000));
inputVariable3.addTerm(new Triangle("middle", 15.000, 30.000, 45.000));
inputVariable3.addTerm(new Trapezoid("upper", 30.000, 45.000, 60.000, 60.000));
engine.addInputVariable(inputVariable3);

OutputVariable outputVariable = new OutputVariable();
outputVariable.setEnabled(true);
outputVariable.setName("happiness");
outputVariable.setRange(0.000, 1.000);
outputVariable.fuzzyOutput().setAccumulation(new Maximum());
outputVariable.setDefuzzifier(new Centroid(200));
outputVariable.setDefaultValue(Double.NaN);
outputVariable.setLockValidOutput(false);
outputVariable.setLockOutputRange(false);
outputVariable.addTerm(new Triangle("miserable", 0.000, 0.166, 0.333));
outputVariable.addTerm(new Triangle("sad", 0.166, 0.333, 0.499));
outputVariable.addTerm(new Triangle("average", 0.333, 0.499, 0.664));
outputVariable.addTerm(new Triangle("happy", 0.499, 0.664, 0.832));
outputVariable.addTerm(new Triangle("ecstatic", 0.664, 0.832, 1.000));
engine.addOutputVariable(outputVariable);

RuleBlock ruleBlock = new RuleBlock();
ruleBlock.setEnabled(true);
ruleBlock.setName("");
ruleBlock.setConjunction(new Minimum());
ruleBlock.setDisjunction(new Maximum());
ruleBlock.setActivation(new Minimum());
ruleBlock.addRule(Rule.parse("if age is young and health is bad and income is lower then happiness is sad", engine));
ruleBlock.addRule(Rule.parse("if age is young and health is bad and income is middle then happiness is average", engine));
ruleBlock.addRule(Rule.parse("if age is young and health is bad and income is upper then happiness is average", engine));
ruleBlock.addRule(Rule.parse("if age is young and health is good and income is lower then happiness is average", engine));
ruleBlock.addRule(Rule.parse("if age is young and health is good and income is middle then happiness is happy", engine));
ruleBlock.addRule(Rule.parse("if age is young and health is good and income is upper then happiness is happy", engine));
ruleBlock.addRule(Rule.parse("if age is young and health is great and income is lower then happiness is average", engine));
ruleBlock.addRule(Rule.parse("if age is young and health is great and income is middle then happiness is happy", engine));
ruleBlock.addRule(Rule.parse("if age is young and health is great and income is upper then happiness is ecstatic", engine));
ruleBlock.addRule(Rule.parse("if age is middle and health is bad and income is lower then happiness is sad", engine));
ruleBlock.addRule(Rule.parse("if age is middle and health is bad and income is middle then happiness is average", engine));
ruleBlock.addRule(Rule.parse("if age is middle and health is bad and income is upper then happiness is average", engine));
ruleBlock.addRule(Rule.parse("if age is middle and health is good and income is lower then happiness is average", engine));
ruleBlock.addRule(Rule.parse("if age is middle and health is good and income is middle then happiness is happy", engine));
ruleBlock.addRule(Rule.parse("if age is middle and health is good and income is upper then happiness is ecstatic", engine));
ruleBlock.addRule(Rule.parse("if age is middle and health is great and income is lower then happiness is average", engine));
ruleBlock.addRule(Rule.parse("if age is middle and health is great and income is middle then happiness is happy", engine));
ruleBlock.addRule(Rule.parse("if age is middle and health is great and income is upper then happiness is ecstatic", engine));
ruleBlock.addRule(Rule.parse("if age is old and health is bad and income is lower then happiness is miserable", engine));
ruleBlock.addRule(Rule.parse("if age is old and health is bad and income is middle then happiness is sad", engine));
ruleBlock.addRule(Rule.parse("if age is old and health is bad and income is upper then happiness is sad", engine));
ruleBlock.addRule(Rule.parse("if age is old and health is good and income is lower then happiness is sad", engine));
ruleBlock.addRule(Rule.parse("if age is old and health is good and income is middle then happiness is average", engine));
ruleBlock.addRule(Rule.parse("if age is old and health is good and income is upper then happiness is happy", engine));
ruleBlock.addRule(Rule.parse("if age is old and health is great and income is lower then happiness is average", engine));
ruleBlock.addRule(Rule.parse("if age is old and health is great and income is middle then happiness is happy", engine));
ruleBlock.addRule(Rule.parse("if age is old and health is great and income is upper then happiness is ecstatic", engine));
engine.addRuleBlock(ruleBlock);

